from importlib.machinery import SOURCE_SUFFIXES
import json
from elasticsearch import Elasticsearch, helpers
import urllib.request
import datetime
from dateutil.relativedelta import relativedelta
d = datetime.datetime.now()
d = d - relativedelta(days=7)
t = d.strftime('%H')
# Password for the 'elastic' user generated by Elasticsearch
ELASTIC_PASSWORD = "zC4so1Hmvt6PkSqA2UeFH6Aj"

# Found in the 'Manage Deployment' page
CLOUD_ID = "ontology:YXAtbm9ydGhlYXN0LTIuYXdzLmVsYXN0aWMtY2xvdWQuY29tOjQ0MyRmZmE2YzBmM2FlZDU0YjhjODhlMWZhMTEzNjllZDc0OSQ1NjU2NzA4NWYxZDM0NzdkOWY3ZTFmNDk2OTkwODE1NA==kibana"

# Create the client instance
id =1
count=1

def bulk_api(index, data, id):
  bulk_list = [] ##JSON LIST 형식
  client = Elasticsearch(
    cloud_id=CLOUD_ID,
    basic_auth=("elastic", ELASTIC_PASSWORD)
  ) 
  for i in range(0, len(data)):
    sigungoo=data[i]["BSST_ARS_NO"]
    sigungoo='11'+sigungoo[:2]+'0'
    #doctype 넣으면 안됨
    data[i] = {
    "_index": index,
    "_id": id,
    "_source": {
      "BUS_STATION": data[i]["BSST_ARS_NO"]+data[i]["BUS_ROUTE_NO"],
      'ARS-ID' : data[i]["BSST_ARS_NO"],
      "노선명" : data[i]["BUS_ROUTE_NO"],            
      '시군구코드' : sigungoo,
      'RIDE_PASGR_NUM' : data[i]["RIDE_PASGR_NUM"],
      'ALIGHT_PASGR_NUM' : data[i]["ALIGHT_PASGR_NUM"]
      }
    }
    id=id+1
    bulk_list.append(data[i])
  bulk_dic=[]
  print(bulk_list)
  print(id)
  helpers.bulk(client, bulk_list ,raise_on_error=True)

# Successful response!
# print(client.info())/


ERROR=True
# import requests
# count=1
# count_id=0
# # 버스 승하차 일일 데이터 노선별 upload 코드 시간별로
while ERROR:
  url = 'http://openapi.seoul.go.kr:8088/6a4550546c6a683339326965757675/json/CardBusStatisticsServiceNew/'+str(count)+'/'+str(count+999)+'/'+d.strftime('%Y%m%d')+'/'
  response = urllib.request.urlopen(url)
  json_str = response.read().decode("utf-8")

  json_object = json.loads(json_str)
  try:
    if json_object["CardBusStatisticsServiceNew"]["RESULT"]["CODE"] == 'INFO-000':
      bulk_api("buspassenger",json_object["CardBusStatisticsServiceNew"]["row"],count)
      count=count+1000
    else:
      print('error')
      break
  except:
    break

client = Elasticsearch(
  cloud_id=CLOUD_ID,
  basic_auth=("elastic", ELASTIC_PASSWORD)
)
count=1
client.reindex(
  source = {"index":"buspassenger"},
  dest = {
    "index":"노선별정류장별승하차정보와행정동코드조인1",
    "pipeline" : "buspassenger-mappingcode-pipeline1"
  }
)
print("1")

count=1
client.reindex(
  source = {"index":"서울시버스노선별정류소정보-reindex"},
  dest={
    "index": "서울시버스노선별정류소정보와노선별정류장별승하차정보와행정동코드조인1",
    "pipeline": "buspassenger-mappingcode-businfo-pipe"
  },
  wait_for_completion=False
)
print("2")

count=1
client.reindex(
  source = {"index":"서울시버스노선별정류소정보와노선별정류장별승하차정보와행정동코드조인1"},
  dest={
    "index": "서울시버스노선별정류소정보와노선별정류장별승하차정보와행정동코드조인2",
    "pipeline": "서울시버스노선별정류소정보와노선별정류장별승하차정보와행정동코드조인1-pipeline"
  },
  wait_for_completion=False
)
print("3")




# # bus routenumber, pasgr_num", ali
# # "시군구 쿠드,"
#   print(json_object)
#   print(count)
#   for a in range(1000):
#     try:
#       if json_object["CardBusStatisticsServiceNew"]["RESULT"]["CODE"] == 'INFO-000':
#         sigungoo=json_object["CardBusStatisticsServiceNew"]["row"][a]["BSST_ARS_NO"]
#         sigungoo='11'+sigungoo[:2]+'0'
#         bus_station=json_object["CardBusStatisticsServiceNew"]["row"][a]["BSST_ARS_NO"]+json_object["CardBusStatisticsServiceNew"]["row"][a]["BUS_ROUTE_NO"]

#         body={
#           "BUS_STATION": bus_station,
#           'ARS-ID' : json_object["CardBusStatisticsServiceNew"]["row"][a]["BSST_ARS_NO"],
#           "BUS_ROUTE_NO" : json_object["CardBusStatisticsServiceNew"]["row"][a]["BUS_ROUTE_NO"],            
#           '시군구코드' : sigungoo,
#           'RIDE_PASGR_NUM' : json_object["CardBusStatisticsServiceNew"]["row"][a]["RIDE_PASGR_NUM"],
#           'ALIGHT_PASGR_NUM' : json_object["CardBusStatisticsServiceNew"]["row"][a]["ALIGHT_PASGR_NUM"]
#         }
#         client.index(index="buspassenger", id=count, body=body)
#         count=count+1
#         ERROR=True
#       else:
#        ERROR=False
#     except:
#        ERROR=False





